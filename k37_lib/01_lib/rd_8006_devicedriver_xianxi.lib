
/*** BeginHeader */
#ifndef rd_8006_devicedriver_xianxi_lib
#define rd_8006_devicedriver_xianxi_lib
/*** EndHeader */





/*******************************************************
山西省污染源监控系统数据采集和传输协议
查询瞬时值
1、如果需要设置"B01",那么B01必须设置在参数编号是1的地方，而且参数编号2不可以设置编码，
2、其它可以自由设置
*******************************************************/
/*** BeginHeader rd_devicedriver_xianxi */
int rd_devicedriver_xianxi( char port );
/*** EndHeader */
int rd_devicedriver_xianxi( char port )
{
   static int status;
   auto union uf f;//uf这在K36的驱动库里已定义
   auto int regAddr;//寄存器地址
   auto char portPosition;
   auto char codePosition;
   static int registerAddr;
   static int i;

   costate
   {
      status = 0;

      portPosition = port + 8;    //计算出是哪个通道的
      codePosition = ai_param[portPosition].polIndex;  //取出污染物编码位置
      registerAddr = CalculateRegisterAddress(codePosition); //计算出MODBUS的寄存器地址
      if(codePosition >= 100) registerAddr += 4;//如果是折算值的，调整一个地址
      pack_modbus_cmd(0x01, 0x03, registerAddr, 0x02);
      com_write(port);
      waitfor(DelayMs(1000));

      memset(com_rbuf, 0x00, sizeof(com_rbuf));
      com_read(port);
      if( (com_rlen >= 9)&&(com_rbuf[0] == 0x01)&&(com_rbuf[1] == 0x03) )
      {
         f.ch[1] = com_rbuf[3];
         f.ch[0] = com_rbuf[4];
         f.ch[3] = com_rbuf[5];
         f.ch[2] = com_rbuf[6];
         com_f[0] = f.f;         //即时值

         if(registerAddr == 0)  //如果是水的，需要读一下累计流量
         {

            pack_modbus_cmd(0x01, 0x03, 0x10, 0x02);
            com_write(port);
            waitfor(DelayMs(1000));

            memset(com_rbuf, 0x00, sizeof(com_rbuf));
            com_read(port);
            if( (com_rlen >= 9)&&(com_rbuf[0] == 0x01)&&(com_rbuf[1] == 0x03) )
            {
               f.ch[1] = com_rbuf[3];
               f.ch[0] = com_rbuf[4];
               f.ch[3] = com_rbuf[5];
               f.ch[2] = com_rbuf[6];
               com_f[1] = f.f;         //累计流量
            }
         }

         for (i = 0; i < 20; i++)
         {
            if(ai_param_extend[i].port == port) //是同一个串口的
            {
               codePosition = ai_param_extend[i].polIndex;
               if((codePosition >= 0) && (codePosition < BOCON_NO_OF_POL))
               {
                  registerAddr = CalculateRegisterAddress(codePosition);
                  if(codePosition >= 100) registerAddr += 4;//如果是折算值的，调整一个地址
                  pack_modbus_cmd(0x01, 0x03, registerAddr, 0x02);
                  com_write(port);
                  waitfor(DelayMs(1000));

                  memset(com_rbuf, 0x00, sizeof(com_rbuf));
                  com_read(port);
                  if( (com_rlen >= 9)&&(com_rbuf[0] == 0x01)&&(com_rbuf[1] == 0x03) )
                  {
                     f.ch[1] = com_rbuf[3];
                     f.ch[0] = com_rbuf[4];
                     f.ch[3] = com_rbuf[5];
                     f.ch[2] = com_rbuf[6];
                     com_f[i+1] = f.f;
                  }
               }
            }
         }//end of for
         status = 1;
      }
      else
      {
         status = 2;
         com_f[0] = 0.0;
         com_f[1] = 0.0;
         com_f[2] = 0.0;
      }
      com_sec = read_rtc();
   }
   return status;
}






/*** BeginHeader */
#endif
/*** EndHeader */















